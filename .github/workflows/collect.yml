name: Container-Collection
run-name: ${{ github.actor }} is Collecting Images ðŸš€
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 1" # Update weekly on Monday Midnight
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-24.04
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\n$GITHUB_OUTPUT\n"
          cat $GITHUB_OUTPUT

  Collect-Images:
    needs: [Date]
    runs-on: ubuntu-24.04
    env:
      GH_TOKEN: ${{ github.token }}
    strategy:
        matrix:
            set: [Base-Images, Pipeline-Images, Atlassian-Images, Service-Images, Support-Images]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run Collection Script for ${{ matrix.set }}.txt
        run: ./collect.sh ${{ matrix.set }}.txt

      - name: Copy README to ${{ matrix.set }} ISO
        run: cp -v README.md ${{ matrix.set }}/

      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum

      - name: ISO Table of contents
        run: |
          tree -a ${{ matrix.set }} \
            | tee ${{ matrix.set }}/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt

      - name: Upload iso ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt
          path: ${{ matrix.set }}/${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.txt
          if-no-files-found: error

      - name: Make ${{ matrix.set }} ISO
        run: |
          echo "Making ISO of ${{ matrix.set }}"
          mkisofs -J -R -v -T -l \
            -V '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ matrix.set }}-${{ needs.Date.outputs.Date }}' \
            -o ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso \
            ${{ matrix.set }}

      - name: Implant MD5 sum into ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso
        run: implantisomd5 ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso Hash
        run: |
          sha256sum -b ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso | tee \
            ${{ matrix.set }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alh *.iso*

      - name: Send ${{ matrix.set }} ISO to Sharepoint
        uses: amentumcms/sharepoint-file-upload-action@pappasjfed-patch-1
        with:
          file_path: "*.iso*"
          host_name: "${{ secrets.SHAREPOINT_HOST }}"
          site_name: "${{ secrets.SHAREPOINT_SITE }}"
          upload_path: "${{ secrets.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Date.outputs.Date }}"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"

  Release:
    runs-on: ubuntu-latest
    needs: [Date, Collect-Images]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alh *

      - name: Set up git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        id: tag_create
        with:
          tag: ${{ needs.Date.outputs.Date }}
          github_token: ${{secrets.GITHUB_TOKEN}}
          tag_exists_error: false
          message: "Release for ${{ needs.Date.outputs.Date }} run"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ vars.COLLECTOR }} ${{ needs.Date.outputs.Date }}
          tag_name: ${{ needs.Date.outputs.Date }}
          make_latest: true
          files: |
            *.txt
